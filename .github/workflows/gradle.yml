name: Java Ci With Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Add permission
      run: chmod +x gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25
      with:
        arguments: build -Pprofile=dev

    - name: SSH Agent 설정
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.DEVELOP_SSH_KEY }}

    - name: AWS EC2 배포 - 파일전송
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.DEVELOP_SSH_KEY }}
        REMOTE_HOST: ${{ secrets.DEVELOP_HOST }}
        REMOTE_USER: ${{ secrets.DEVELOP_USERNAME }}
        SOURCE: 'build/libs/'
        TARGET: '~/app/ci_cd_test'
        EXCLUDE: '/**/*.jar'

    - name: jar 파일 실행
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.DEVELOP_USERNAME }}@${{ secrets.DEVELOP_HOST }} << EOF
          pkill -f 'spring_ci_cd-0.0.1-SNAPSHOT.jar' || true
          cd ~/app/ci_cd_test
          nohup java -jar -Dspring.profiles.active=develop spring_ci_cd-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.DEVELOP_SSH_KEY }}